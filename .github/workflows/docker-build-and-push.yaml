name: Build docker images
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'branch, tag or sha to run job on'
        required: true
        default: ''
  release:
    types: [ published ]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHCR_USERNAME: ${{ github.repository_owner }}
  GHCR_PASSWORD: ${{ secrets.CR_PAT }}
  GH_REPO_URL: ${{ github.event.repository.html_url }}
jobs:

  release-config-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github

      - name: Build Docker image
        run: mvn compile jib:build --no-transfer-progress

  release-user-service:
    needs: [ release-config-server ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github

      - name: Build Docker image
        run: mvn compile jib:build --no-transfer-progress

  release-service-gateway:
    needs: [ release-user-service ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github

      - name: Build Docker image
        run: mvn compile jib:build --no-transfer-progress

  release-db-migration:
    needs: [ release-service-gateway ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ contains(github.event_name, 'release') }}
        uses: actions/checkout@v2

      - name: Checkout
        if: ${{ contains(github.event_name, 'workflow_dispatch') }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: docker image tags
        id: tags
        run: |
          IMAGE=ghcr.io/bilelkhalsi/ioservices/service-db-migration
          REF=${{ github.sha }}
          TAGS="${IMAGE}:${REF}"
          if [ $GITHUB_EVENT_NAME == 'release' ]
          then
            REF=${{ github.event.release.tag_name }}
            TAGS="${TAGS},${IMAGE}:${REF},${IMAGE}:latest"
            echo "Release event : ${REF}"
          elif [ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]
          then
            REF=${{ github.event.inputs.tag }}
            TAGS="${TAGS},${IMAGE}:${REF}"
            echo "Manually running on tag : ${REF}"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=version::${REF}
          echo ::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./service-db-migration
          file: ./service-db-migration/Dockerfile
          push: true
          tags: ${{steps.tags.outputs.tags}}
          labels: |
            org.opencontainers.image.created=${{ steps.tags.outputs.date }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
